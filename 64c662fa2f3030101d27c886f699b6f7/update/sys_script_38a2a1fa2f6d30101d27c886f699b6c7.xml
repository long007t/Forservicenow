<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>ServiceNow for Slack Task Notify</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var taskEvent = "x_545827_slack_std.task_changed";
	var EVENT_NAMES = new ServiceNowForSlackConstants().getEventNames();
	
	// handle when task state is changed
	if (current.operation() != 'insert' && current.state.changes()) {
		gs.eventQueue(taskEvent, current, EVENT_NAMES.state, current.state);
	}
	
	// handle when task priority is changed
	if (current.operation() != 'insert' && current.priority.changes()) {
		gs.eventQueue(taskEvent, current, EVENT_NAMES.priority, current.priority);
	}

	// handle when task is commented
	if (current.operation() != 'insert' && current.comments.changes()) {
		gs.eventQueue(taskEvent, current, EVENT_NAMES.commented, gs.getUserID());
	}
	
	
	// handle when task's Assignment Group changed
	if (current.operation() != 'insert' && current.assignment_group.changes()) {
		gs.eventQueue(taskEvent, current, EVENT_NAMES.assignmentGroup, gs.getUserID());
	}
	
	// handle when task Assignee changed
	if (current.operation() != 'insert' && current.assigned_to.changes()) {
		gs.eventQueue(taskEvent, current, EVENT_NAMES.assignedTo, gs.getUserID());
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-07-28 09:22:11</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>38a2a1fa2f6d30101d27c886f699b6c7</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>ServiceNow for Slack Task Notify</sys_name>
        <sys_overrides/>
        <sys_package display_value="ServiceNow for Slack Notifications" source="x_545827_slack_std">64c662fa2f3030101d27c886f699b6f7</sys_package>
        <sys_policy/>
        <sys_scope display_value="ServiceNow for Slack Notifications">64c662fa2f3030101d27c886f699b6f7</sys_scope>
        <sys_update_name>sys_script_38a2a1fa2f6d30101d27c886f699b6c7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-08-06 10:42:40</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=38a2a1fa2f6d30101d27c886f699b6c7"/>
</record_update>
